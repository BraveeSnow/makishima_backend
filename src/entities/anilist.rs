//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.15

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "Anilist")]
pub struct Model {
    #[sea_orm(column_name = "Id", primary_key, auto_increment = false, unique)]
    pub id: u32,
    #[sea_orm(column_name = "AccessToken", unique)]
    pub access_token: String,
    #[sea_orm(column_name = "RefreshToken", unique)]
    pub refresh_token: String,
    #[sea_orm(column_name = "Expiry")]
    pub expiry: u64,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_one = "super::user::Entity")]
    User,
}

impl Related<super::user::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::User.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
